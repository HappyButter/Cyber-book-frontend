{"version":3,"file":"static/js/632.15d760d2.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/CssBaseline/CssBaseline.js","views/Account/account.css.js","views/Account/Account.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { exactProp } from '@material-ui/utils';\nexport var html = {\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box'\n};\nexport var body = function body(theme) {\n  return _extends({\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    backgroundColor: theme.palette.background.default,\n    '@media print': {\n      // Save printer ink.\n      backgroundColor: theme.palette.common.white\n    }\n  });\n};\nexport var styles = function styles(theme) {\n  return {\n    '@global': {\n      html: html,\n      '*, *::before, *::after': {\n        boxSizing: 'inherit'\n      },\n      'strong, b': {\n        fontWeight: theme.typography.fontWeightBold\n      },\n      body: _extends({\n        margin: 0\n      }, body(theme), {\n        // Add support for document.body.requestFullScreen().\n        // Other elements, if background transparent, are not supported.\n        '&::backdrop': {\n          backgroundColor: theme.palette.background.default\n        }\n      })\n    }\n  };\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(props) {\n  /* eslint-disable no-unused-vars */\n  var _props$children = props.children,\n      children = _props$children === void 0 ? null : _props$children,\n      classes = props.classes;\n  /* eslint-enable no-unused-vars */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  CssBaseline['propTypes' + ''] = exactProp(CssBaseline.propTypes);\n}\n\nexport default withStyles(styles, {\n  name: 'MuiCssBaseline'\n})(CssBaseline);","import styled from 'styled-components';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const AccountDataWrapper = styled(Container)`\r\n    background-color: rgba(255,255,255, 0.5);\r\n    color: rgb(239, 255, 250, 0.8);\r\n    font-size: 180%;\r\n    border-radius: 1em;\r\n    padding-top: 1px;\r\n    padding-bottom: 11px;\r\n`","import React, { useContext, useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountDataWrapper } from './account.css';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from 'hooks/Auth';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: theme.spacing(10),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        height: 60,\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Account = () => {\r\n    const classes = useStyles();\r\n    \r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    \r\n    const { user } = useContext(AuthContext);\r\n    \r\n    useEffect( () => {\r\n        setName(user.firstName);\r\n        setSurname(user.lastName);\r\n        setEmail(user.email);\r\n    },[user])\r\n\r\n    return (\r\n        <>\r\n            <br/>\r\n            <AccountDataWrapper component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <AccountCircleIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Account details\r\n                </Typography>\r\n                <form className={classes.form}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled={true}\r\n                                autoComplete=\"given-name\"\r\n                                name=\"name\"\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"First Name\"\r\n                                variant=\"filled\"\r\n                                value={name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                disabled={true}\r\n                                autoComplete=\"family-name\"\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                variant=\"filled\"\r\n                                value={surname}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                disabled={true}\r\n                                fullWidth\r\n                                type=\"tel\"\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                id=\"phoneNumber\"\r\n                                variant=\"filled\"\r\n                                value={email}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            { !user && <Navigate to=\"/\" />  }\r\n        </AccountDataWrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Account;\r\n"],"names":["html","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","body","theme","_extends","color","palette","text","primary","typography","body2","backgroundColor","background","default","common","white","withStyles","fontWeight","fontWeightBold","margin","name","props","_props$children","children","classes","React","AccountDataWrapper","styled","Container","useStyles","makeStyles","paper","marginTop","spacing","display","flexDirection","alignItems","marginBottom","avatar","secondary","main","form","width","submit","height","useState","setName","surname","setSurname","email","setEmail","user","useContext","AuthContext","useEffect","firstName","lastName","component","maxWidth","className","Avatar","AccountCircle","Typography","variant","Grid","container","item","xs","sm","TextField","disabled","autoComplete","fullWidth","id","label","value","type","to"],"sourceRoot":""}